knitr::opts_chunk$set(echo = TRUE,
#results = "hide",
eval = TRUE,
message=FALSE,
error=FALSE)
knitr::opts_knit$set(root.dir = '../')
library(webexercises)
# set working directory
setwd("~/Documents/git_projects/ADDA_taller2_2022/")
# install pacman if not already installed
if (!require("pacman")) install.packages("pacman")
# use pacman to load libraries
pacman::p_load(tidyverse, DESeq2, apeglm)
txi<-readRDS("./data/salmon_gene_counts.rds")
samples<-read_csv("./data/design_matrix.csv")
samples <- samples %>%
filter(tissue=="skin") %>%
mutate(condition=as.factor(paste(treatment, side, sep="_")))
## filter txi matrices
txi$abundance<-txi$abundance[,samples$sample_id]
txi$counts<-txi$counts[,samples$sample_id]
txi$length<-txi$length[,samples$sample_id]
dds
dds <- DESeqDataSetFromTximport(txi,
colData = samples,
design = ~ condition)
dds
class(dds)
str(dds)
dds
names(assays)
names(assays(dds))
colData(dds)
rowData(dds)
dds <- DESeq(dds)
plotDispEsts(dds)
results(dd)
results(dds)
bD_bV_res
# without shrinkage:
bD_bV_res<-results(dds,
name="condition_white_ventral_vs_black_dorsal")
bD_bV_res
# with shrinkage
bD_bV_shr<-lfcShrink(dds,
coef="condition_white_ventral_vs_black_dorsal",
type="apeglm")
bD_bV_shr
par(mfrow=c(1,2))
par(mar=c(4,4,1,1))
# fold changes
plot(bD_bV_res$log2FoldChange~bD_bV_shr$log2FoldChange,
xlab="Fold Change (shrunk)",
ylab="Fold Change (MLE)")
# p values
plot(bD_bV_res$padj~bD_bV_shr$padj,
xlab="adjusted p-value (shrunk)",
ylab="adjusted p-value (MLE)")
par(mfrow=c(1,1))
par(mfrow=c(1,2))
par(mar=c(4,4,4,1))
DESeq2::plotMA(bD_bV_res, main="MLE")
DESeq2::plotMA(bD_bV_shr, main="MAP")
library(scales) # needed for oob parameter
library(viridis)
# Coerce to a data frame
deseq2ResDF <- as.data.frame(res_bD_bV)
res_bD_bV
# white dorsal vs white ventral
res_wD_wV<-results(dds, contrast=c("condition","white_dorsal","white_ventral"))
# black dorsal vs black ventral
res_bD_bV<-results(dds, contrast=c("condition","black_dorsal","black_ventral"))
# black dorsal vs white dorsal
res_bD_wD<-results(dds, contrast=c("condition","black_dorsal","white_dorsal"))
# black ventral vs white ventral
res_bV_wV<-results(dds, contrast=c("condition","black_ventral","white_ventral"))
# Coerce to a data frame
deseq2ResDF <- as.data.frame(res_bD_bV)
# Examine this data frame
head(deseq2ResDF)
# Set a boolean column for significance
deseq2ResDF$significant <- ifelse(deseq2ResDF$padj < .1, "Significant", NA)
# Plot the results similar to DEseq2
ggplot(deseq2ResDF, aes(baseMean, log2FoldChange, colour=significant)) + geom_point(size=1) + scale_y_continuous(limits=c(-3, 3), oob=squish) + scale_x_log10() + geom_hline(yintercept = 0, colour="tomato1", size=2) + labs(x="mean of normalized counts", y="log fold change") + scale_colour_manual(name="q-value", values=("Significant"="red"), na.value="grey50") + theme_bw()
# Let's add some more detail
ggplot(deseq2ResDF, aes(baseMean, log2FoldChange, colour=padj)) + geom_point(size=1) + scale_y_continuous(limits=c(-3, 3), oob=squish) + scale_x_log10() + geom_hline(yintercept = 0, colour="darkorchid4", size=1, linetype="longdash") + labs(x="mean of normalized counts", y="log fold change") + scale_colour_viridis(direction=-1, trans='sqrt') + theme_bw() + geom_density_2d(colour="black", size=2)
# Set a boolean column for significance
res_bD_bV %>%
as.data.frame() %>%
mutate(significant =ifelse(deseq2ResDF$padj < .1, "Significant", NA))  %>% # add boolnea significance value
ggplot(aes(baseMean, log2FoldChange, colour=significant)) +
geom_point(size=1) +
scale_y_continuous(limits=c(-3, 3), oob=squish) +
scale_x_log10() +
geom_hline(yintercept = 0, colour="tomato1", size=2) +
labs(x="mean of normalized counts", y="log fold change") +
scale_colour_manual(name="q-value", values=("Significant"="red"), na.value="grey50") +
theme_bw()
# Set a boolean column for significance
res_bD_bV %>%
as.data.frame() %>%
mutate(significant =ifelse(deseq2ResDF$padj < .1, "Significant", NA))  %>% # add boolnea significance value
ggplot(aes(baseMean, log2FoldChange, colour=significant)) +
geom_point(size=1) +
scale_y_continuous(limits=c(-3, 3), oob=squish) +
scale_x_log10() +
geom_hline(yintercept = 0, colour="tomato1", size=2) +
labs(x="mean of normalized counts", y="log fold change") +
scale_colour_manual(name="q-value", values=("Significant"="red"), na.value="grey50") +
geom_density_2d(colour="black", size=2)
# Set a boolean column for significance
res_bD_bV %>%
as.data.frame() %>%
#mutate(significant =ifelse(deseq2ResDF$padj < .1, "Significant", NA))  %>% # add boolnea significance value
ggplot(aes(baseMean, log2FoldChange, colour=padj)) +
geom_point(size=1) +
scale_y_continuous(limits=c(-3, 3), oob=squish) +
scale_x_log10() +
geom_hline(yintercept = 0, colour="darkorchid4", size=1, linetype="longdash") +
labs(x="mean of normalized counts", y="log fold change") +
scale_colour_viridis(direction=-1, trans='sqrt') +
geom_density_2d(colour="black", size=2)
# Set a boolean column for significance
res_bD_bV %>%
as.data.frame() %>%
#mutate(significant =ifelse(deseq2ResDF$padj < .1, "Significant", NA))  %>% # add boolnea significance value
ggplot(aes(baseMean, log2FoldChange, colour=padj)) +
geom_point(size=1) +
scale_y_continuous(limits=c(-3, 3), oob=squish) +
scale_x_log10() +
geom_hline(yintercept = 0, colour="darkorchid4", size=1, linetype="longdash") +
labs(x="mean of normalized counts", y="log fold change") +
scale_colour_viridis(direction=-1, trans='sqrt') +
geom_density_2d(colour="black", size=1)
# Set a boolean column for significance
res_bD_bV %>%
as.data.frame() %>%
#mutate(significant =ifelse(deseq2ResDF$padj < .1, "Significant", NA))  %>% # add boolnea significance value
ggplot(aes(baseMean, log2FoldChange, colour=padj)) +
geom_point(size=1) +
scale_y_continuous(limits=c(-3, 3), oob=squish) +
scale_x_log10() +
geom_hline(yintercept = 0, colour="darkorchid4", size=1, linetype="longdash") +
labs(x="mean of normalized counts", y="log fold change") +
scale_colour_viridis(direction=-1, trans='sqrt') +
geom_density_2d(colour="white", size=1)
# Set a boolean column for significance
res_bD_bV %>%
as.data.frame() %>%
#mutate(significant =ifelse(deseq2ResDF$padj < .1, "Significant", NA))  %>% # add boolnea significance value
ggplot(aes(baseMean, log2FoldChange, colour=padj)) +
geom_point(size=1) +
scale_y_continuous(limits=c(-3, 3), oob=squish) +
scale_x_log10() +
geom_hline(yintercept = 0, colour="darkorchid4", size=1, linetype="longdash") +
labs(x="mean of normalized counts", y="log fold change") +
scale_colour_viridis(direction=-1, trans='sqrt') +
geom_density_2d(colour="white", size=1) +
theme_bw()
# Set a boolean column for significance
res_bD_bV %>%
as.data.frame() %>%
#mutate(significant =ifelse(deseq2ResDF$padj < .1, "Significant", NA))  %>% # add boolnea significance value
ggplot(aes(baseMean, log2FoldChange, colour=padj)) +
geom_point(size=1) +
scale_y_continuous(limits=c(-3, 3), oob=squish) +
scale_x_log10() +
geom_hline(yintercept = 0, colour="darkorchid4", size=1, linetype="longdash") +
labs(x="mean of normalized counts", y="log fold change") +
scale_colour_viridis(direction=-1, trans='sqrt') +
geom_density_2d(colour="blue", size=1) +
theme_bw()
# Set a boolean column for significance
res_bD_bV %>%
as.data.frame() %>%
#mutate(significant =ifelse(deseq2ResDF$padj < .1, "Significant", NA))  %>% # add boolnea significance value
ggplot(aes(baseMean, log2FoldChange, colour=padj)) +
geom_point(size=1) +
scale_y_continuous(limits=c(-3, 3), oob=squish) +
scale_x_log10() +
geom_hline(yintercept = 0, colour="darkorchid4", size=1, linetype="longdash") +
labs(x="mean of normalized counts", y="log fold change") +
scale_colour_viridis(direction=-1, trans='sqrt') +
geom_density_2d(colour="blue", size=0.5) +
theme_bw()
# Set a boolean column for significance
res_bD_bV %>%
as.data.frame() %>%
#mutate(significant =ifelse(deseq2ResDF$padj < .1, "Significant", NA))  %>% # add boolnea significance value
ggplot(aes(baseMean, log2FoldChange, colour=padj)) +
geom_point(size=1) +
scale_y_continuous(limits=c(-3, 3), oob=squish) +
scale_x_log10() +
geom_hline(yintercept = 0, colour="red", size=1, linetype="longdash") +
labs(x="mean of normalized counts", y="log fold change") +
scale_colour_viridis(direction=-1, trans='sqrt') +
geom_density_2d(colour="blue", size=0.5) +
theme_bw()
res_bD_bV %>%
as.data.frame() %>%
ggplot(aes(baseMean, log2FoldChange, colour=padj)) +
geom_point(size=1) +
scale_y_continuous(limits=c(-3, 3)) +
scale_x_log10() +
geom_hline(yintercept = 0, colour="red", size=1, linetype="longdash") +
labs(x="mean of normalized counts", y="log fold change") +
scale_colour_viridis(direction=-1, trans='sqrt') +
geom_density_2d(colour="blue", size=0.5) +
theme_bw()
res_bD_bV %>%
as.data.frame() %>%
ggplot(aes(baseMean, log2FoldChange, colour=padj)) +
geom_point(size=1) +
scale_y_continuous(limits=c(-3, 3), oob=squish) + # oob from the scales package is needed to "squish" points falling outside the axis limits
scale_x_log10() +
geom_hline(yintercept = 0, colour="red", size=1, linetype="longdash") +
labs(x="mean of normalized counts", y="log fold change") +
scale_colour_viridis(direction=-1, trans='sqrt') +
geom_density_2d(colour="blue", size=0.5) +
theme_bw()
# apeglm shrinkage can only be done on already calculated coefficients:
resultsNames(dds)
# without shrinkage:
bD_bV_res<-results(dds,
name="condition_white_ventral_vs_black_dorsal")
bD_bV_res
# with shrinkage
bD_bV_shr<-lfcShrink(dds,
coef="condition_white_ventral_vs_black_dorsal",
type="apeglm")
bD_bV_shr
View(res_wD_wV)
res<-list(bD_bV = res_bD_bV,
wD_wV = res_wD_wV,
bV_wV = res_bV_wV,
bD_wD = res_bD_wD)
DESeq2::plotMA(res$wD_wV)
DESeq2::plotMA(res$wD_bD)
DESeq2::plotMA(res$bD_wD)
DESeq2::plotMA(res$bD_bV)
# repeat results, but with shrinkage
bD_bV_shr<-lfcShrink(dds,
coef="condition_white_ventral_vs_black_dorsal",
type="apeglm")
par(mfrow=c(1,2))
par(mar=c(4,4,1,1))
# p values
plot(res$bD_bV$padj~bD_bV_shr$padj,
xlab="adjusted p-value (shrunk)",
ylab="adjusted p-value (MLE)")
res$bD_bV
res$bD_b
bD_bV_shr
bD_bV
res$bD_bV
bD_bV_shr$padj
bD_bV_shr
# p values
plot(res$bD_bV$padj~bD_bV_shr$padj,
xlab="adjusted p-value (shrunk)",
ylab="adjusted p-value (MLE)")
DESeq2::plotMA(res$bD_bV)
DESeq2::plotMA(res$wD_bD)
DESeq2::plotMA(res$bD_wD)
# repeat results, but with shrinkage
bD_wD_shr<-lfcShrink(dds,
coef="condition_black_dorsal_vs_white_dorsal",
type="apeglm")
resultsNames(dds)
DESeq2::plotMA(res$bD_wD)
bD_wD_shr<-lfcShrink(dds,
coef="condition_white_dorsal_vs_black_dorsal",
type="apeglm")
wD_bD_shr<-lfcShrink(dds,
coef="condition_white_dorsal_vs_black_dorsal",
type="apeglm")
wD_bD_shr
plotMA(wD_bD_shr)
par(mfrow=c(1,2))
DESeq2::plotMA(res$bD_wD)
par(mfrow=c(1,2))
par(mar=c(4,4,1,1))
# p values
plot(res$bD_bV$padj~bD_bV_shr$padj,
xlab="adjusted p-value (shrunk)",
ylab="adjusted p-value (MLE)")
# p values
plot(res$bD_wD$padj~wD_bD_shr_shr$padj,
xlab="adjusted p-value (shrunk)",
ylab="adjusted p-value (MLE)")
# p values
plot(res$bD_wD$padj~wD_bD_shr$padj,
xlab="adjusted p-value (shrunk)",
ylab="adjusted p-value (MLE)")
# p values
plot(res$bD_wD$padj~wD_bD_shr$padj,
xlab="adjusted p-value (shrunk)",
ylab="adjusted p-value (MLE)")
# fold changes
plot(res$bD_wD$log2FoldChange~wD_bD_shr$log2FoldChange,
xlab="Fold Change (shrunk)",
ylab="Fold Change (MLE)")
par(mfrow=c(1,2))
par(mar=c(4,4,4,1))
DESeq2::plotMA(bD_bV_res, main="MLE")
DESeq2::plotMA(bD_bV_shr, main="MAP")
DESeq2::plotMA(wD_bD_shr, main="MAP")
DESeq2::plotMA(res$bD_wD, main="MLE")
DESeq2::plotMA(wD_bD_shr, main="MAP")
bD_bV_res <- results(dds,
coef="condition_white_ventral_vs_black_dorsal")
bD_bV_res <- results(dds,
contrast= c("condition","white_ventral", "black_dorsal"))
# with shrinkage
bD_bV_shr<-lfcShrink(dds,
coef="condition_white_ventral_vs_black_dorsal",
type="apeglm")
par(mfrow=c(1,2))
par(mar=c(4,4,1,1))
# p values
plot(bD_bV_res$padj~bD_bV_shr$padj,
xlab="adjusted p-value (shrunk)",
ylab="adjusted p-value (MLE)")
# fold changes
plot(bD_bV_res$log2FoldChange~bD_bV_shr$log2FoldChange,
xlab="Fold Change (shrunk)",
ylab="Fold Change (MLE)")
